@namespace LitExplore.UI.Pages.Authorized.Home.Components

@using LitExplore.Controllers
@using LitExplore.Controllers.Graph
@using LitExplore.Core.Publication
@using LitExplore.Core.Filter
@using LitExplore.Core.Filter.Filters
@using LitExplore.UI.Pages.Authorized.Home.Components.Graph

@inject GraphController controller

<div class="h-full w-11/12">
  @if (graph == null)
  {
    <p>Loading graph...</p>
  } else {
    <DynamicGraph graph=@graph></DynamicGraph>
  }
</div>

@code {
  private VisualGraph? graph;

  
  protected override async Task OnInitializedAsync()
  {

    // Add filter event
    FilterEvent.AddSub((Filter<PublicationGraph> filter) => {
      if (graph == null) return;
      InvokeAsync(() => {
        graph.Filter(filter);
        StateHasChanged();
      });
    });


    NewEvent.AddSub(() => {
      LoadGraph();
    });

    LoadGraph();
  }

  private async void LoadGraph() {
    try {
      graph = await controller.Load(0);
    } catch (Exception e) {
      Console.WriteLine(e);
    }

    StateHasChanged();
  }
}